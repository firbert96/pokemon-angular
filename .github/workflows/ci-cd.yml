name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  deploy-monolith:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker Image
      run: |
        docker build -f ci/Dockerfile -t pokemon-angular .

    - name: Check Docker Image
      run: |
        docker images

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Tag Docker Image
      run: |
        docker tag pokemon-angular ${{ secrets.DOCKER_USERNAME }}/pokemon-angular:latest

    - name: Push Docker Image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/pokemon-angular:latest

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'ap-southeast-1' # Change this to your region

    - name: Upload Files to EC2
      run: |
        # Upload files to EC2 instance
        scp -i "${{ secrets.EC2_SSH_KEY }}" -r . ec2-user@${{ secrets.EC2_PUBLIC_DNS }}:/home/ec2-user/app

    - name: Deploy to EC2 and Run Docker Compose
      run: |
        # SSH into EC2 instance and run Docker Compose commands
        ssh -i "${{ secrets.EC2_SSH_KEY }}" ec2-user@${{ secrets.EC2_PUBLIC_DNS }} << 'EOF'
          cd /home/ec2-user/app
          docker-compose pull
          docker-compose up -d
        EOF
